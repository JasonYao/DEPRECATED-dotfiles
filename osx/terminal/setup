#!/usr/bin/env bash

##
# Configures sane iTerm preferences
##

iterm_info_plist="/Applications/iTerm.app/Contents/Info.plist"
iterm_download_link="https://iterm2.com/downloads/stable/latest"

# Sets up fonts
	if [[ $(echo $HOME/Library/Fonts/* | grep FreeMono) == "" ]]; then
		info "Font: FreeMono is not installed yet, installing now"
		cp "$dotfiles_directory"/osx/terminal/font/FreeMono.ttf "$HOME"/Library/Fonts/
		success "Font: FreeMono is now installed"
	else
		success "Font: FreeMono is already installed"
	fi

# Checks if application preferences have been installed
	if [[ -f $HOME/Library/Preferences/com.googlecode.iterm2.plist ]]; then
		success "iTerm: Preferences have already been linked"
	else
		info "iTerm: Preferences have not been linked, linking now"
		if ln -s "$dotfiles_directory"/osx/terminal/com.googlecode.iterm2.plist "$HOME"/Library/Preferences/com.googlecode.iterm2.plist ; then
			success "iTerm: Preferences have now been linked"
		else
			fail "iTerm: Preferences failed to be linked"
		fi
		warn "iTerm: Warning, good preferences have been set, but requires a logout or restart to be enabled"
	fi

# Runs iTerm as a process in the background
warn "iTerm: Running iTerm as a process in the background is broken in Sierra+, please wait for the next patch"
#	if [[ $(tail $iterm_info_plist | grep "</plist>" -B 3 | grep "LSUIElement") != "" ]]; then
#		success "iTerm: Application is already backgrounded"
#	else
#		info "iTerm: Application is not backgrounded yet, backgrounding now"
#		if perl -i -0pe 's/<\/dict>\n<\/plist>/\t<key>LSUIElement<\/key>\n\t<true\/>\n<\/dict>\n<\/plist>/' $iterm_info_plist ; then
#			success "iTerm: Application is now backgrounded"
#		else
#			fail "iTerm: Application failed to be backgrounded"
#		fi
#	fi
